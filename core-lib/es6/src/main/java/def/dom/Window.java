package def.dom;

@jsweet.lang.SyntacticIterable
@jsweet.lang.Extends({WindowTimers.class,WindowSessionStorage.class,WindowLocalStorage.class,WindowConsole.class,GlobalEventHandlers.class,IDBEnvironment.class,WindowBase64.class})
public class Window extends def.js.Object {
    public double animationStartTime;
    public ApplicationCache applicationCache;
    public Navigator clientInformation;
    public java.lang.Boolean closed;
    public Crypto crypto;
    public java.lang.String defaultStatus;
    public double devicePixelRatio;
    public java.lang.String doNotTrack;
    public Document document;
    public Event event;
    public External external;
    public Element frameElement;
    public Window frames;
    public History history;
    public double innerHeight;
    public double innerWidth;
    public double length;
    public Location location;
    public BarProp locationbar;
    public BarProp menubar;
    public double msAnimationStartTime;
    public MSTemplatePrinter msTemplatePrinter;
    public java.lang.String name;
    public Navigator navigator;
    public jsweet.util.union.Union<java.lang.String,java.lang.Boolean> offscreenBuffering;
    public java.util.function.Function<Event,java.lang.Object> onabort;
    public java.util.function.Function<Event,java.lang.Object> onafterprint;
    public java.util.function.Function<Event,java.lang.Object> onbeforeprint;
    public java.util.function.Function<BeforeUnloadEvent,java.lang.Object> onbeforeunload;
    public java.util.function.Function<FocusEvent,java.lang.Object> onblur;
    public java.util.function.Function<Event,java.lang.Object> oncanplay;
    public java.util.function.Function<Event,java.lang.Object> oncanplaythrough;
    public java.util.function.Function<Event,java.lang.Object> onchange;
    public java.util.function.Function<MouseEvent,java.lang.Object> onclick;
    public java.util.function.Function<Event,java.lang.Object> oncompassneedscalibration;
    public java.util.function.Function<PointerEvent,java.lang.Object> oncontextmenu;
    public java.util.function.Function<MouseEvent,java.lang.Object> ondblclick;
    public java.util.function.Function<DeviceMotionEvent,java.lang.Object> ondevicemotion;
    public java.util.function.Function<DeviceOrientationEvent,java.lang.Object> ondeviceorientation;
    public java.util.function.Function<DragEvent,java.lang.Object> ondrag;
    public java.util.function.Function<DragEvent,java.lang.Object> ondragend;
    public java.util.function.Function<DragEvent,java.lang.Object> ondragenter;
    public java.util.function.Function<DragEvent,java.lang.Object> ondragleave;
    public java.util.function.Function<DragEvent,java.lang.Object> ondragover;
    public java.util.function.Function<DragEvent,java.lang.Object> ondragstart;
    public java.util.function.Function<DragEvent,java.lang.Object> ondrop;
    public java.util.function.Function<Event,java.lang.Object> ondurationchange;
    public java.util.function.Function<Event,java.lang.Object> onemptied;
    public java.util.function.Function<Event,java.lang.Object> onended;
    public ErrorEventHandler onerror;
    public java.util.function.Function<FocusEvent,java.lang.Object> onfocus;
    public java.util.function.Function<HashChangeEvent,java.lang.Object> onhashchange;
    public java.util.function.Function<Event,java.lang.Object> oninput;
    public java.util.function.Function<KeyboardEvent,java.lang.Object> onkeydown;
    public java.util.function.Function<KeyboardEvent,java.lang.Object> onkeypress;
    public java.util.function.Function<KeyboardEvent,java.lang.Object> onkeyup;
    public java.util.function.Function<Event,java.lang.Object> onload;
    public java.util.function.Function<Event,java.lang.Object> onloadeddata;
    public java.util.function.Function<Event,java.lang.Object> onloadedmetadata;
    public java.util.function.Function<Event,java.lang.Object> onloadstart;
    public java.util.function.Function<MessageEvent,java.lang.Object> onmessage;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmousedown;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmouseenter;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmouseleave;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmousemove;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmouseout;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmouseover;
    public java.util.function.Function<MouseEvent,java.lang.Object> onmouseup;
    public java.util.function.Function<MouseWheelEvent,java.lang.Object> onmousewheel;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgesturechange;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgesturedoubletap;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgestureend;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgesturehold;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgesturestart;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsgesturetap;
    public java.util.function.Function<MSGestureEvent,java.lang.Object> onmsinertiastart;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointercancel;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerdown;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerenter;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerleave;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointermove;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerout;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerover;
    public java.util.function.Function<MSPointerEvent,java.lang.Object> onmspointerup;
    public java.util.function.Function<Event,java.lang.Object> onoffline;
    public java.util.function.Function<Event,java.lang.Object> ononline;
    public java.util.function.Function<Event,java.lang.Object> onorientationchange;
    public java.util.function.Function<PageTransitionEvent,java.lang.Object> onpagehide;
    public java.util.function.Function<PageTransitionEvent,java.lang.Object> onpageshow;
    public java.util.function.Function<Event,java.lang.Object> onpause;
    public java.util.function.Function<Event,java.lang.Object> onplay;
    public java.util.function.Function<Event,java.lang.Object> onplaying;
    public java.util.function.Function<PopStateEvent,java.lang.Object> onpopstate;
    public java.util.function.Function<ProgressEvent,java.lang.Object> onprogress;
    public java.util.function.Function<Event,java.lang.Object> onratechange;
    public java.util.function.Function<ProgressEvent,java.lang.Object> onreadystatechange;
    public java.util.function.Function<Event,java.lang.Object> onreset;
    public java.util.function.Function<UIEvent,java.lang.Object> onresize;
    public java.util.function.Function<UIEvent,java.lang.Object> onscroll;
    public java.util.function.Function<Event,java.lang.Object> onseeked;
    public java.util.function.Function<Event,java.lang.Object> onseeking;
    public java.util.function.Function<UIEvent,java.lang.Object> onselect;
    public java.util.function.Function<Event,java.lang.Object> onstalled;
    public java.util.function.Function<StorageEvent,java.lang.Object> onstorage;
    public java.util.function.Function<Event,java.lang.Object> onsubmit;
    public java.util.function.Function<Event,java.lang.Object> onsuspend;
    public java.util.function.Function<Event,java.lang.Object> ontimeupdate;
    public java.lang.Object ontouchcancel;
    public java.lang.Object ontouchend;
    public java.lang.Object ontouchmove;
    public java.lang.Object ontouchstart;
    public java.util.function.Function<Event,java.lang.Object> onunload;
    public java.util.function.Function<Event,java.lang.Object> onvolumechange;
    public java.util.function.Function<Event,java.lang.Object> onwaiting;
    public Window opener;
    public java.lang.String orientation;
    public double outerHeight;
    public double outerWidth;
    public double pageXOffset;
    public double pageYOffset;
    public Window parent;
    public Performance performance;
    public BarProp personalbar;
    public Screen screen;
    public double screenLeft;
    public double screenTop;
    public double screenX;
    public double screenY;
    public double scrollX;
    public double scrollY;
    public BarProp scrollbars;
    public Window self;
    public java.lang.String status;
    public BarProp statusbar;
    public StyleMedia styleMedia;
    public BarProp toolbar;
    public Window top;
    public Window window;
    native public void alert(java.lang.Object message);
    native public void blur();
    native public void cancelAnimationFrame(double handle);
    native public void captureEvents();
    native public void close();
    native public java.lang.Boolean confirm(java.lang.String message);
    native public void focus();
    native public CSSStyleDeclaration getComputedStyle(Element elt, java.lang.String pseudoElt);
    native public CSSRuleList getMatchedCSSRules(Element elt, java.lang.String pseudoElt);
    native public Selection getSelection();
    native public MediaQueryList matchMedia(java.lang.String mediaQuery);
    native public void moveBy(double x, double y);
    native public void moveTo(double x, double y);
    native public void msCancelRequestAnimationFrame(double handle);
    native public MediaQueryList msMatchMedia(java.lang.String mediaQuery);
    native public double msRequestAnimationFrame(FrameRequestCallback callback);
    native public void msWriteProfilerMark(java.lang.String profilerMarkName);
    native public java.lang.Object open(java.lang.String url, java.lang.String target, java.lang.String features, java.lang.Boolean replace);
    native public void postMessage(java.lang.Object message, java.lang.String targetOrigin, java.lang.Object ports);
    native public void print();
    native public java.lang.String prompt(java.lang.String message, java.lang.String _default);
    native public void releaseEvents();
    native public double requestAnimationFrame(FrameRequestCallback callback);
    native public void resizeBy(double x, double y);
    native public void resizeTo(double x, double y);
    native public void scroll(double x, double y);
    native public void scrollBy(double x, double y);
    native public void scrollTo(double x, double y);
    native public WebKitPoint webkitConvertPointFromNodeToPage(Node node, WebKitPoint pt);
    native public WebKitPoint webkitConvertPointFromPageToNode(Node node, WebKitPoint pt);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureChange type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureDoubleTap type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureEnd type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureHold type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureStart type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureTap type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSInertiaStart type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerCancel type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerDown type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerEnter type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerLeave type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerMove type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerOut type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerOver type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerUp type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.abort type, java.util.function.Function<UIEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.afterprint type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.beforeprint type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.beforeunload type, java.util.function.Function<BeforeUnloadEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.blur type, java.util.function.Function<FocusEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.canplay type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.canplaythrough type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.change type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.click type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.compassneedscalibration type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.contextmenu type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dblclick type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.devicemotion type, java.util.function.Function<DeviceMotionEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.deviceorientation type, java.util.function.Function<DeviceOrientationEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.drag type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dragend type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dragenter type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dragleave type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dragover type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.dragstart type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.drop type, java.util.function.Function<DragEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.durationchange type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.emptied type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.ended type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.focus type, java.util.function.Function<FocusEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.hashchange type, java.util.function.Function<HashChangeEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.input type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.keydown type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.keypress type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.keyup type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.load type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.loadeddata type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.loadedmetadata type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.loadstart type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.message type, java.util.function.Function<MessageEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mousedown type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mouseenter type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mouseleave type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mousemove type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mouseout type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mouseover type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mouseup type, java.util.function.Function<MouseEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.mousewheel type, java.util.function.Function<MouseWheelEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.offline type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.online type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.orientationchange type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pagehide type, java.util.function.Function<PageTransitionEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pageshow type, java.util.function.Function<PageTransitionEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pause type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.play type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.playing type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.popstate type, java.util.function.Function<PopStateEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.progress type, java.util.function.Function<ProgressEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.ratechange type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.readystatechange type, java.util.function.Function<ProgressEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.reset type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.resize type, java.util.function.Function<UIEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.scroll type, java.util.function.Function<UIEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.seeked type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.seeking type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.select type, java.util.function.Function<UIEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.stalled type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.storage type, java.util.function.Function<StorageEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.submit type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.suspend type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.timeupdate type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.unload type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.volumechange type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.waiting type, java.util.function.Function<Event,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public Window $get(double index);
    public static Window prototype;
    public Window(){}
    native public void clearInterval(double handle);
    native public void clearTimeout(double handle);
    native public double setInterval(java.lang.Object handler, java.lang.Object timeout, java.lang.Object... args);
    native public double setTimeout(java.lang.Object handler, java.lang.Object timeout, java.lang.Object... args);
    native public void clearImmediate(double handle);
    native public void msClearImmediate(double handle);
    native public double msSetImmediate(java.lang.Object expression, java.lang.Object... args);
    native public double setImmediate(java.lang.Object expression, java.lang.Object... args);
    public Storage sessionStorage;
    public Storage localStorage;
    public Console console;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointercancel;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerdown;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerenter;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerleave;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointermove;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerout;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerover;
    public java.util.function.Function<PointerEvent,java.lang.Object> onpointerup;
    public java.util.function.Function<WheelEvent,java.lang.Object> onwheel;
    native public void addEventListener(jsweet.util.StringTypes.pointercancel type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerdown type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerenter type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerleave type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointermove type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerout type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerover type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.pointerup type, java.util.function.Function<PointerEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(jsweet.util.StringTypes.wheel type, java.util.function.Function<WheelEvent,java.lang.Object> listener, java.lang.Boolean useCapture);
    native public void addEventListener(java.lang.String type, EventListener listener, java.lang.Boolean useCapture);
    public IDBFactory indexedDB;
    public IDBFactory msIndexedDB;
    native public java.lang.String atob(java.lang.String encodedString);
    native public java.lang.String btoa(java.lang.String rawString);
    native public void alert();
    native public java.lang.Boolean confirm();
    native public CSSStyleDeclaration getComputedStyle(Element elt);
    native public CSSRuleList getMatchedCSSRules(Element elt);
    native public void moveBy(double x);
    native public void moveBy();
    native public void moveTo(double x);
    native public void moveTo();
    native public java.lang.Object open(java.lang.String url, java.lang.String target, java.lang.String features);
    native public java.lang.Object open(java.lang.String url, java.lang.String target);
    native public java.lang.Object open(java.lang.String url);
    native public java.lang.Object open();
    native public void postMessage(java.lang.Object message, java.lang.String targetOrigin);
    native public java.lang.String prompt(java.lang.String message);
    native public java.lang.String prompt();
    native public void resizeBy(double x);
    native public void resizeBy();
    native public void resizeTo(double x);
    native public void resizeTo();
    native public void scroll(double x);
    native public void scroll();
    native public void scrollBy(double x);
    native public void scrollBy();
    native public void scrollTo(double x);
    native public void scrollTo();
    native public void addEventListener(jsweet.util.StringTypes.MSGestureChange type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureDoubleTap type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureEnd type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureHold type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureStart type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSGestureTap type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSInertiaStart type, java.util.function.Function<MSGestureEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerCancel type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerDown type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerEnter type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerLeave type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerMove type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerOut type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerOver type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.MSPointerUp type, java.util.function.Function<MSPointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.abort type, java.util.function.Function<UIEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.afterprint type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.beforeprint type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.beforeunload type, java.util.function.Function<BeforeUnloadEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.blur type, java.util.function.Function<FocusEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.canplay type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.canplaythrough type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.change type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.click type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.compassneedscalibration type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.contextmenu type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dblclick type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.devicemotion type, java.util.function.Function<DeviceMotionEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.deviceorientation type, java.util.function.Function<DeviceOrientationEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.drag type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dragend type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dragenter type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dragleave type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dragover type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.dragstart type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.drop type, java.util.function.Function<DragEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.durationchange type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.emptied type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.ended type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.focus type, java.util.function.Function<FocusEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.hashchange type, java.util.function.Function<HashChangeEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.input type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.keydown type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.keypress type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.keyup type, java.util.function.Function<KeyboardEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.load type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.loadeddata type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.loadedmetadata type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.loadstart type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.message type, java.util.function.Function<MessageEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mousedown type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mouseenter type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mouseleave type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mousemove type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mouseout type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mouseover type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mouseup type, java.util.function.Function<MouseEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.mousewheel type, java.util.function.Function<MouseWheelEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.offline type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.online type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.orientationchange type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pagehide type, java.util.function.Function<PageTransitionEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pageshow type, java.util.function.Function<PageTransitionEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pause type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.play type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.playing type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointercancel type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerdown type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerenter type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerleave type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointermove type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerout type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerover type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.pointerup type, java.util.function.Function<PointerEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.popstate type, java.util.function.Function<PopStateEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.progress type, java.util.function.Function<ProgressEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.ratechange type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.readystatechange type, java.util.function.Function<ProgressEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.reset type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.resize type, java.util.function.Function<UIEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.scroll type, java.util.function.Function<UIEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.seeked type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.seeking type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.select type, java.util.function.Function<UIEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.stalled type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.storage type, java.util.function.Function<StorageEvent,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.submit type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.suspend type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.timeupdate type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.unload type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.volumechange type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.waiting type, java.util.function.Function<Event,java.lang.Object> listener);
    native public void addEventListener(jsweet.util.StringTypes.wheel type, java.util.function.Function<WheelEvent,java.lang.Object> listener);
    native public void addEventListener(java.lang.String type, EventListener listener);
    native public double setInterval(java.lang.Object handler);
    native public double setTimeout(java.lang.Object handler);
    native public void addEventListener(java.lang.String type, EventListenerObject listener, java.lang.Boolean useCapture);
    native public void addEventListener(java.lang.String type, EventListenerObject listener);
    native public void onerror(def.dom.Event event, def.js.String source, double fileno, double columnNumber);
    native public void onerror(def.js.String event, def.js.String source, double fileno, double columnNumber);
    native public void onerror(def.dom.Event event, def.js.String source, double fileno);
    native public void onerror(def.dom.Event event, def.js.String source);
    native public void onerror(def.dom.Event event);
    native public void onerror(def.js.String event, def.js.String source, double fileno);
    native public void onerror(def.js.String event, def.js.String source);
    native public void onerror(def.js.String event);
    /** From Iterable, to allow foreach loop (do not use directly). */
    @jsweet.lang.Erased
    native public java.util.Iterator<Window> iterator();
}

